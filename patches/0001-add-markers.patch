--- a/modules/report.py
+++ b/modules/report.py
@@ -1,9 +1,12 @@
+# >>> FILE_MARKERS_ENABLED
 from __future__ import annotations
 import json
 import uuid
 import shutil
 from pathlib import Path
 from datetime import datetime, time as dtime, timedelta
 from typing import Dict, Any, List, Optional
 
 import streamlit as st
 from streamlit.components.v1 import html
+# <<< FILE_MARKERS_ENABLED
 
@@ -11,9 +14,12 @@
 REPORTS_BASE = Path("data") / "reports"
 REPORTS_BASE.mkdir(parents=True, exist_ok=True)
 
+# >>> HELPERS_START
@@ -69,6 +75,7 @@
 def _fmt_addr(loc: Dict[str, Any]) -> str:
     """Sestav√≠ ƒçitelnou adresu z detailn√≠ch pol√≠, pokud nen√≠ 'address'."""
     if not isinstance(loc, dict):
         return ""
@@ -104,6 +111,7 @@
     return ", ".join([p for p in parts1 if p])
+# >>> HELPERS_END
 
+# >>> STORAGE_START
@@ -112,6 +120,7 @@
 def save_report(data: Dict[str, Any]) -> None:
     """Ulo≈æ√≠ JSON do slo≈æky reportu. Zajist√≠ vyplnƒõn√© 'oec' a 'report_id'."""
     rid = data.get("report_id")
@@ -170,6 +179,7 @@
     out.sort(key=lambda x: (x.get("updated_at") or "", x.get("created_at") or ""), reverse=True)
     return out
+# >>> STORAGE_END
 
@@ -206,6 +216,7 @@
         "drawings": [],
     }
 
+# >>> UI_HELPERS_START
 def _inject_section_css() -> None:
     """Jemn√© vizu√°ln√≠ oddƒõlen√≠ sekc√≠ (karty)."""
     if st.session_state.get("_report_css_injected"):
@@ -236,10 +247,12 @@
     )
     st.session_state["_report_css_injected"] = True
 
@@ -247,10 +260,12 @@
     )
 
 
 def _card_end():
     st.markdown("</div>", unsafe_allow_html=True)
+# >>> UI_HELPERS_END
 
 
+# >>> RENDER_REPORT_START
 # ========= Hlavn√≠ UI =========
 def render_report() -> None:
     """Editor report≈Ø: z√°lo≈æky, vizu√°ln√≠ karty, ukl√°d√°n√≠ do JSON + maz√°n√≠ (sidebar i editor)."""
@@ -263,6 +278,7 @@
     st.session_state.setdefault("current_report_id", None)
 
     st.markdown("### üìù Report ‚Äì evidence zji≈°tƒõn√≠ na po≈æ√°≈ôi≈°ti")
 
+    # >>> SIDEBAR_START
     # ---- Sidebar ----
     with st.sidebar:
         st.markdown("#### üìÇ Moje reporty")
@@ -303,8 +319,10 @@
         else:
             st.info("Zat√≠m nem√°≈° ≈æ√°dn√© ulo≈æen√© reporty.")
 
         st.markdown("---")
         new_btn_sidebar = st.button("‚ûï Nov√Ω report", use_container_width=True, key="report_btn_new_sidebar")
+    # <<< SIDEBAR_END
 
+    # >>> NEW_OPEN_ACTIONS_START
     # Akce: nov√Ω (sidebar)
     if new_btn_sidebar:
         new_id = _new_report_id(oec)
@@ -325,16 +343,20 @@
     if open_btn and chosen:
         st.session_state.current_report_id = chosen
         st.rerun()
 
     # One-shot: otev≈ôi report po zalo≈æen√≠
     if st.session_state.get("_open_on_next_run"):
         st.session_state.current_report_id = st.session_state.pop("_open_on_next_run")
         st.rerun()
+    # <<< NEW_OPEN_ACTIONS_END
 
+    # >>> CTA_NO_SELECTED_START
     # ---- Pokud nen√≠ vybr√°n report, uk√°≈æeme CTA (bez auto-open) ----
     if not st.session_state.current_report_id:
         st.info("Vyber existuj√≠c√≠ report v lev√©m panelu nebo zalo≈æ nov√Ω.")
         if st.button("‚ûï Zalo≈æit nov√Ω report", key="report_btn_new_main", use_container_width=True):
             new_id = _new_report_id(oec)
             data = _empty_report(oec, new_id)
             try:
                 save_report(data)
             except Exception as e:
                 st.error(f"Ukl√°d√°n√≠ selhalo: {e}")
                 st.stop()
             st.session_state["_open_on_next_run"] = new_id
             st.rerun()
         # reset potlaƒçen√≠ po jednom bƒõhu
         if st.session_state.get("_suppress_auto_open"):
             st.session_state["_suppress_auto_open"] = False
         st.stop()
+    # <<< CTA_NO_SELECTED_END
 
+    # >>> EDITOR_PREP_START
     # ---- Editor vybran√©ho reportu ----
     report_id = st.session_state.current_report_id
     data = load_report(report_id) or _empty_report(oec, report_id)
@@ -375,9 +397,12 @@
         try: save_report(data)
         except Exception as e: st.warning(f"Autoopravn√© ulo≈æen√≠ selhalo: {e}")
 
     st.markdown(f"**Report ID:** `{report_id}`")
+    # <<< EDITOR_PREP_END
+
+    # >>> TOPBAR_CLOSE_START
     if st.button("‚¨ÖÔ∏è Zav≈ô√≠t report", key=f"report_close_btn_top_{report_id}", use_container_width=True):
         st.session_state.current_report_id = None
         st.session_state["_suppress_auto_open"] = True
         st.rerun()
+    # <<< TOPBAR_CLOSE_END
 
+    # >>> GEO_FROM_URL_START
     # Geolokace z URL (HTTPS only)
     params = st.query_params
     geo_lat = params.get("geo_lat"); geo_lon = params.get("geo_lon")
@@ -392,10 +417,12 @@
                 if "geo_ts" in params: del params["geo_ts"]
             except Exception:
                 pass
         except (TypeError, ValueError):
             pass
+    # <<< GEO_FROM_URL_END
 
+    # >>> FORM_START
     # ====== FORM + TABS ======
     with st.form(f"report_form_{report_id}"):
         tab_event, tab_people, tab_cond, tab_find, tab_notes = st.tabs(
             ["Ud√°lost", "√öƒçastn√≠ci", "Podm√≠nky", "Zji≈°tƒõn√≠", "Pozn√°mky"]
         )
@@ -403,6 +430,7 @@
         # --- Ud√°lost ---
         with tab_event:
+            # >>> EVENT_SECTION_START
             _card("Identifikace ud√°losti", icon="üìå", tag="Sekce 1")
 
             c_dt1, c_dt2, c_dt3 = st.columns(3)
             with c_dt1:
@@ -457,8 +485,10 @@
 
             st.text_area("Popis ud√°losti", value=ev.get("description", ""), key=f"report_desc_{report_id}", height=120)
             _card_end()
+            # <<< EVENT_SECTION_END
 
         # --- √öƒçastn√≠ci ---
         with tab_people:
+            # >>> PEOPLE_SECTION_START
             _card("Z√∫ƒçastnƒõn√© osoby a jednotky", icon="üë•", tag="Sekce 2")
             c6, c7, c8 = st.columns(3)
             with c6:
@@ -471,8 +501,10 @@
                 units = st.text_input("Jednotky / slo≈æky", value=data["participants"].get("units", ""))
             assist = st.text_input("Asistuj√≠c√≠ org√°ny (Policie ƒåR, znalci‚Ä¶)", value=data["participants"].get("assist", ""))
             _card_end()
+            # <<< PEOPLE_SECTION_END
 
         # --- Podm√≠nky ---
         with tab_cond:
+            # >>> CONDITIONS_SECTION_START
             _card("Podm√≠nky prost≈ôed√≠", icon="üå¶Ô∏è", tag="Sekce 3")
             c9, c10, c11 = st.columns(3)
             with c9:
@@ -482,8 +514,10 @@
                 visibility = st.text_input("Viditelnost", value=data["conditions"].get("visibility", ""))
             _card_end()
+            # <<< CONDITIONS_SECTION_END
 
         # --- Zji≈°tƒõn√≠ ---
         with tab_find:
+            # >>> FINDINGS_SECTION_START
             _card("Technick√° zji≈°tƒõn√≠", icon="üõ†Ô∏è", tag="Sekce 4")
             c12, c13, c14 = st.columns(3)
             with c12:
@@ -494,17 +528,21 @@
                 damage_estimate_czk = st.number_input("Odhad ≈°kody [Kƒç]", value=float(data["findings"].get("damage_estimate_czk") or 0.0), step=1000.0, format="%.0f")
             _card_end()
+            # <<< FINDINGS_SECTION_END
 
         # --- Pozn√°mky ---
         with tab_notes:
+            # >>> NOTES_SECTION_START
             _card("Voln√© pozn√°mky", icon="üìù", tag="Sekce 5")
             notes = st.text_area("Pozn√°mky", value=data.get("notes", ""), height=160)
             _card_end()
+            # <<< NOTES_SECTION_END
 
+        # >>> GEOLOC_ACTION_START
         # === Akce bez ulo≈æen√≠ (geolokace) ===
         if 'geo_submit' in locals() and geo_submit:
             html("""
                 <script>(function(){
                   if (!navigator.geolocation) { alert("Geolokace nen√≠ dostupn√°."); return; }
@@ -521,8 +559,10 @@
                 """, height=0)
             st.stop()
+        # <<< GEOLOC_ACTION_END
 
+        # >>> SAVE_BUTTONS_START
         # --- Ulo≈æen√≠ ---
         col_save, col_close = st.columns([1, 1])
         save_draft = col_save.form_submit_button("üíæ Ulo≈æit pr≈Øbƒõh", use_container_width=True)
         save_and_close = col_close.form_submit_button("‚úÖ Ulo≈æit a zav≈ô√≠t", use_container_width=True)
+        # <<< SAVE_BUTTONS_END
 
+        # >>> SAVE_HANDLER_START
         if save_draft or save_and_close:
             data["updated_at"] = _now_iso()
             data["oec"] = oec
@@ -574,10 +614,13 @@
                 if save_and_close:
                     st.session_state.current_report_id = None
                     st.session_state["_suppress_auto_open"] = True
                 st.rerun()
+        # <<< SAVE_HANDLER_END
- 
+    # <<< FORM_END
+
     st.markdown("---")
+    # >>> DELETE_SECTION_START
     with st.expander("üóëÔ∏è Smazat tento report", expanded=False):
         col1, col2 = st.columns([1, 1])
         confirm = col1.checkbox("Rozum√≠m, chci smazat", key=f"del_confirm_{report_id}")
@@ -592,8 +635,11 @@
             except Exception as e:
                 st.error(f"Chyba p≈ôi maz√°n√≠: {e}")
+    # <<< DELETE_SECTION_END
 
+    # >>> BACK_BUTTON_START
     if st.button("‚¨ÖÔ∏è Zpƒõt na v√Ωbƒõr reportu", key=f"report_back_bottom_{report_id}", use_container_width=True):
         st.session_state.current_report_id = None
         st.session_state["_suppress_auto_open"] = True
         st.rerun()
+    # <<< BACK_BUTTON_END
+# >>> RENDER_REPORT_END
